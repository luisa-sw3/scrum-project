{% extends 'BackendBundle:Default:main.html.twig' %}
{% block title %}{{'backend.sprint.new'|trans}}{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                {{'backend.sprint.new'|trans}}
                <a href="{{ app.request.headers.get('referer') }}" class="btn btn-default pull-right">{{'backend.global.back'|trans}}</a>
            </h1>
            
            {% set item2 = {'text': project.name, 'url':path('backend_projects_view',{'id':project.id}),'icon':'fa fa-dashboard'} %}
            {% set item3 = {'text': 'backend.sprint.sprints'|trans, 'url':path('backend_project_sprints',{'id':project.id}), 'icon':'fa fa-rotate-right'} %}
            {% set item4 = {'text': 'backend.sprint.new'|trans, 'icon':'fa fa-star-o'} %}
            {% set items = [item2, item3, item4] %}
            {{ filters.breadcrum(items) }}
        </div>
    </div>
        
    <div class="row">
        {{ form_start(form, {'action': path('backend_project_sprints_new',{'id':project.id}), 'method': 'POST'}) }}
            <div class="col-lg-12 col-md-12 col-xs-12">
                <div class="form-group">
                    {{ form_label(form.name)}} <em>*</em>
                    {{ form_widget(form.name, {'attr':{'class':'form-control'}}) }}
                    {{ form_errors(form.name) }}
                </div>
                <div class="form-group">
                    {{ form_label(form.isWorkingWeekends)}}
                    {{ form_widget(form.isWorkingWeekends, {'attr':{'class':''}}) }}
                    {{ form_errors(form.isWorkingWeekends) }}
                </div>
                <div style="display: none;">
                    {{ form_widget(form.startDate, {'attr':{'class':'date-selector-sm'}}) }}
                    {{ form_errors(form.startDate) }}
                    {{ form_widget(form.estimatedDate, {'attr':{'class':'date-selector-sm'}}) }}
                    {{ form_errors(form.estimatedDate) }}
                </div>
                <div class="form-group col-lg-3 col-md-4 col-xs-12">
                    {{ form_label(form.startDate)}} <em>*</em>
                    <div id='startDate'></div>
                </div>
                <div class="form-group col-lg-3 col-md-4 col-xs-12">
                    {{ form_label(form.estimatedDate)}} <em>*</em>
                    <div id='estimatedDate'></div>
                </div>
                <div class="form-group col-lg-6 col-md-6 col-xs-12" id="sprint-dates">
                    {% include 'BackendBundle:Project/Sprint:sprintDates.html.twig' %}
                </div>
                <div class="form-group col-lg-6 col-md-6 col-xs-12 text-center" id="loading" style="display: none; height: 100%">
                    <i class="fa fa-spinner fa-spin fa-4x" style="margin-top: 25px;"></i>
                </div>
            </div>
            <div class="col-lg-12 col-md-12 col-xs-12">
                <div class="form-group">
                    {{ form_label(form.description)}}
                    {{ form_widget(form.description, {'attr':{'class':'form-control'}}) }}
                    {{ form_errors(form.description) }}
                </div>
            </div>
        
            <div class="col-lg-12 col-md-12 col-xs-12">
                {{ form_widget(form._token) }} 
                <button type="submit"class="btn btn-primary pull-right">{{ 'backend.global.create'|trans }}</button>
            </div>
        {{ form_end(form) }}
    </div>
{% endblock %}
{% block scripts %}
    
    
    singleHtmlEditor('textarea', 200);

    $('#startDate').datetimepicker({
        inline: true,
        format: 'DD/MM/YYYY',
        showTodayButton: true
    });

    $('#estimatedDate').datetimepicker({
        useCurrent: false,
        inline: true,
        format: 'DD/MM/YYYY',
        showTodayButton: true
    });
    
    $("#startDate").on("dp.change", function (e) {
        $('#estimatedDate').data("DateTimePicker").minDate(e.date);
        var date1 = $('#startDate').data("DateTimePicker").date();
        $("#backendbundle_sprint_type_startDate_year").val(date1.format('Y'));
        $("#backendbundle_sprint_type_startDate_month").val(date1.format('M'));
        $("#backendbundle_sprint_type_startDate_day").val(date1.format('D'));
        updateSprintDates();
    });
    $("#estimatedDate").on("dp.change", function (e) {
        $('#startDate').data("DateTimePicker").maxDate(e.date);
        var date2 = $('#estimatedDate').data("DateTimePicker").date();
        $("#backendbundle_sprint_type_estimatedDate_year").val(date2.format('Y'));
        $("#backendbundle_sprint_type_estimatedDate_month").val(date2.format('M'));
        $("#backendbundle_sprint_type_estimatedDate_day").val(date2.format('D'));
        updateSprintDates();
    });
    
    $("#backendbundle_sprint_type_isWorkingWeekends").change(function(){
        var object = $(this);
        var workWeekends = object.is(":checked");
        var disabledDays = [];
        if (workWeekends) {
            disabledDays = [];
        } else {
            disabledDays = [0, 6];
        }
        $('#startDate').data("DateTimePicker").daysOfWeekDisabled(disabledDays);
        $('#estimatedDate').data("DateTimePicker").daysOfWeekDisabled(disabledDays);
        
        updateSprintDates();
    });
    
    $("#sprint-dates").on( "click", "#all-days", function() {
        
        console.log('entra');
        var object = $(this);
        var allDays = object.is(":checked");
        
        $('.working-check-day').each(function() {
            
            var isChecked = $(this).is(":checked");
            
            if (allDays) {
                if (!isChecked) {
                    $(this).prop('checked', true);
                }
            } else {
                if (isChecked) {
                    $(this).prop('checked',false)
                }
            }
        });
    });
    
    $("#backendbundle_sprint_type_isWorkingWeekends").trigger('change');
    $("#startDate").trigger("dp.change");
    $("#estimatedDate").trigger("dp.change");
{% endblock %}

{% block functions_javascript %}
    
    var pageLoaded = false;
    
    function updateSprintDates() {
        
        var startDate = getStartDateValue();
        var estimatedDate = getEstimatedDateValue();
        var workingWeekends = $("#backendbundle_sprint_type_isWorkingWeekends").is(":checked");
        
        if (startDate != '' && estimatedDate != '') {
            $("#loading, #sprint-dates").toggle();
            $.ajax({
                type: 'POST',
                url: "{{path('backend_project_sprints_html_sprint_days',{'id':project.id, 'sprintId':0})}}",
                dataType: 'json',
                data: {startDate: startDate, estimatedDate: estimatedDate, workingWeekends:workingWeekends},
                success: function (resp)
                {
                    $("#loading, #sprint-dates").toggle();
                    if (resp.result == '__OK__') {
                        $("#sprint-dates").html(resp.html);
                    } else {
                        bootbox.alert(resp.msg);
                    }
                },
                error: function (resp)
                {
                    $("#loading, #sprint-dates").toggle();
                    bootbox.alert("{{'backend.global.unknown_error'|trans}}")
                }
            });
        }
    }
    
    function getStartDateValue() {
        var year = $("#backendbundle_sprint_type_startDate_year").val();
        var month = $("#backendbundle_sprint_type_startDate_month").val();
        var day = $("#backendbundle_sprint_type_startDate_day").val();
        
        if( year != '' && month !='' && day != '') {
            return year+'-'+month+'-'+day;
        }
        return '';
    }
    
    function getEstimatedDateValue() {
        var year = $("#backendbundle_sprint_type_estimatedDate_year").val();
        var month = $("#backendbundle_sprint_type_estimatedDate_month").val();
        var day = $("#backendbundle_sprint_type_estimatedDate_day").val();
        if (year != '' && month !='' && day != '') {
            return year+'-'+month+'-'+day;
        }
        return '';
    }
{% endblock %}
